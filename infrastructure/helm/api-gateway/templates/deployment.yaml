apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kong
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-kong
    component: gateway
    part-of: ai-detection-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8001"
    prometheus.io/path: "/metrics"
spec:
  replicas: {{ .Values.kong.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Release.Name }}-kong
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-kong
        component: gateway
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      # Security Context for Pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        readOnlyRootFilesystem: true
      
      containers:
      - name: kong
        image: "{{ .Values.kong.image.repository }}:{{ .Values.kong.image.tag }}"
        imagePullPolicy: {{ .Values.kong.image.pullPolicy }}
        
        # Container Security Context
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        
        ports:
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-ssl
          containerPort: 8443
          protocol: TCP
        - name: metrics
          containerPort: 8001
          protocol: TCP
        
        resources:
          {{- toYaml .Values.kong.resources | nindent 12 }}
        
        env:
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_DECLARATIVE_CONFIG
          value: "/usr/local/kong/declarative/kong.yml"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8001"
        - name: KONG_SSL
          value: "on"
        - name: KONG_SSL_CIPHER_SUITE
          value: "modern"
        
        volumeMounts:
        - name: kong-config
          mountPath: /usr/local/kong/declarative
          readOnly: true
        - name: ssl-certs
          mountPath: /usr/local/kong/ssl
          readOnly: true
        - name: tmp
          mountPath: /tmp
        
        livenessProbe:
          httpGet:
            path: /status
            port: 8001
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /status
            port: 8001
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /status
            port: 8001
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30
      
      volumes:
      - name: kong-config
        configMap:
          name: {{ .Release.Name }}-kong-config
      - name: ssl-certs
        secret:
          secretName: {{ .Release.Name }}-kong-ssl
      - name: tmp
        emptyDir: {}
      
      # Pod scheduling and placement
      {{- with .Values.kong.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.kong.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.kong.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      terminationGracePeriodSeconds: 60