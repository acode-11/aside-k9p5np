# Kong API Gateway ConfigMap Template
# Version: 2.8.1
# Platform: AI-Powered Detection Platform

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-kong-config" .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: kong
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: "2.8.1"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: detection-platform
  annotations:
    # Add checksum annotation to trigger pod reload on config changes
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "0"

data:
  kong.yml: |
    _format_version: "2.1"
    _transform: true

    # Service definitions for platform APIs
    services:
      # Detection Service API
      - name: detection-service
        url: http://detection-service.{{ .Release.Namespace }}.svc:8080
        protocol: http
        connect_timeout: 60000
        write_timeout: 60000
        read_timeout: 60000
        retries: 5
        routes:
          - name: detection-api
            paths:
              - /api/v1/detections
            strip_path: false
            preserve_host: true
            protocols: 
              - https
            https_redirect_status_code: 308

      # AI Service API  
      - name: ai-service
        url: http://ai-service.{{ .Release.Namespace }}.svc:8080
        protocol: http
        connect_timeout: 120000
        write_timeout: 120000
        read_timeout: 120000
        retries: 3
        routes:
          - name: ai-api
            paths:
              - /api/v1/ai
            strip_path: false
            preserve_host: true
            protocols:
              - https
            https_redirect_status_code: 308

    # Global plugins configuration
    plugins:
      # Authentication plugin
      - name: jwt
        config:
          header_names:
            - Authorization
          claims_to_verify:
            - exp
          key_claim_name: kid
          secret_is_base64: false
          run_on_preflight: true
          maximum_expiration: 7200

      # OAuth 2.0 plugin
      - name: oauth2
        config:
          scopes:
            - "read:detections"
            - "write:detections"
            - "admin:platform"
          mandatory_scope: true
          enable_authorization_code: true
          enable_client_credentials: true
          accept_http_if_already_terminated: false
          global_credentials: false
          refresh_token_ttl: 1209600
          provision_key: {{ .Values.kong.oauth2.provisionKey }}

      # Rate limiting plugin
      - name: rate-limiting
        config:
          minute: 60
          hour: 1000
          policy: redis
          fault_tolerant: true
          hide_client_headers: false
          redis_host: {{ .Values.redis.master.fullname }}
          redis_port: 6379
          redis_password: {{ .Values.redis.auth.password }}
          redis_timeout: 2000

      # CORS plugin
      - name: cors
        config:
          origins:
            - "https://*.detection-platform.com"
          methods:
            - GET
            - POST
            - PUT
            - DELETE
            - OPTIONS
          headers:
            - Authorization
            - Content-Type
            - X-Request-ID
          exposed_headers:
            - X-Request-ID
          credentials: true
          max_age: 3600
          preflight_continue: false

      # WAF plugin
      - name: request-transformer
        config:
          add:
            headers:
              - "X-Frame-Options:DENY"
              - "X-Content-Type-Options:nosniff"
              - "X-XSS-Protection:1; mode=block"
              - "Strict-Transport-Security:max-age=31536000; includeSubDomains"

      # Prometheus metrics plugin
      - name: prometheus
        config:
          status_code_metrics: true
          latency_metrics: true
          upstream_health_metrics: true
          bandwidth_metrics: true

    # Upstream configuration for services
    upstreams:
      - name: detection-service
        targets:
          - target: detection-service.{{ .Release.Namespace }}.svc:8080
            weight: 100
        healthchecks:
          active:
            type: http
            http_path: /health
            timeout: 5
            interval: 10
            healthy:
              interval: 5
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 2

      - name: ai-service
        targets:
          - target: ai-service.{{ .Release.Namespace }}.svc:8080
            weight: 100
        healthchecks:
          active:
            type: http
            http_path: /health
            timeout: 10
            interval: 15
            healthy:
              interval: 5
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 2

    # Consumer configuration
    consumers:
      - username: system
        custom_id: system-user
        tags:
          - internal
          - system