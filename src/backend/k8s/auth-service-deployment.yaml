# Kubernetes Deployment for Authentication Service
# Version: apps/v1 (K8s 1.28+)
# Purpose: Manages authentication service pods with high availability and security controls
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: default
  labels:
    app: auth-service
    component: backend
    tier: security
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
spec:
  # High availability configuration with 3 replicas
  replicas: 3
  # Zero-downtime deployment strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  # Pod selector for deployment management
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        security-tier: authentication
      annotations:
        security.policy/enforce: "strict"
        checksum/config: "${CONFIG_CHECKSUM}"
    spec:
      containers:
      - name: auth-service
        image: auth-service:latest
        imagePullPolicy: Always
        ports:
          - name: http
            containerPort: 3001
            protocol: TCP
          - name: metrics
            containerPort: 9090
            protocol: TCP
        env:
          - name: NODE_ENV
            value: "production"
          - name: LOG_LEVEL
            value: "info"
        resources:
          requests:
            cpu: "250m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        # Health check configuration
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        # Security context for container hardening
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        # Volume mounts for configuration and runtime data
        volumeMounts:
          - name: config-volume
            mountPath: /app/config
            readOnly: true
          - name: secrets-volume
            mountPath: /app/secrets
            readOnly: true
          - name: tmp-volume
            mountPath: /tmp
          - name: logs-volume
            mountPath: /app/logs
      # Volume definitions
      volumes:
        - name: config-volume
          configMap:
            name: auth-service-config
        - name: secrets-volume
          secret:
            secretName: auth-service-secrets
        - name: tmp-volume
          emptyDir:
            medium: Memory
            sizeLimit: 256Mi
        - name: logs-volume
          emptyDir: {}
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - auth-service
                topologyKey: kubernetes.io/hostname