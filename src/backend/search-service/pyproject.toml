[tool.poetry]
name = "search-service"
version = "1.0.0"
description = "Search service for AI-Powered Detection Platform providing natural language search capabilities with Elasticsearch integration"
authors = ["AI Detection Platform Team <team@aidetection.platform>"]
license = "Proprietary"
readme = "README.md"
python = "^3.11"
packages = [
    { include = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "0.104.0"            # High-performance async web framework
uvicorn = "0.24.0"            # ASGI server implementation
elasticsearch = "8.11.0"       # Official Elasticsearch client
elasticsearch-dsl = "8.11.0"   # High-level Elasticsearch DSL
pydantic = "2.4.2"            # Data validation using type annotations
grpcio = "1.59.0"             # gRPC framework
protobuf = "4.24.0"           # Protocol buffers support
prometheus-client = "0.17.0"   # Metrics and monitoring
python-jose = "3.3.0"         # JWT token handling
aiohttp = "3.8.5"             # Async HTTP client/server
python-dotenv = "1.0.0"       # Environment variable management
tenacity = "8.2.3"            # Retry handling for robustness

[tool.poetry.group.dev.dependencies]
pytest = "7.4.3"              # Testing framework
pytest-asyncio = "0.21.1"     # Async test support
pytest-cov = "4.1.0"          # Test coverage reporting
black = "23.10.1"             # Code formatting
isort = "5.12.0"              # Import sorting
flake8 = "6.1.0"              # Code linting
mypy = "1.6.1"                # Static type checking

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]