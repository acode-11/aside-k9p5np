[build-system]
requires = ["poetry-core>=1.7.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ai-detection-service"
version = "1.0.0"
description = "AI service for detection generation, optimization and cross-platform translation using GPT-4, custom transformers, and BERT-based models"
authors = ["AI Detection Platform Team <team@aidetection.platform>"]
license = "Proprietary"
readme = "README.md"
packages = [{include = "src"}]
python = "^3.11"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
pydantic = "^2.4.2"
grpcio = "^1.59.0"
protobuf = "^4.24.0"
openai = "^1.2.0"
langchain = "^0.0.335"
tensorflow = "^2.14.0"
tensorflow-gpu = "^2.14.0"
transformers = "^4.35.0"
torch = "^2.1.0"
torch-cuda = "^2.1.0"
prometheus-client = "^0.18.0"
python-json-logger = "^2.0.7"
nvidia-cuda-runtime = "^12.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.10.0"
isort = "^5.12.0"
mypy = "^1.6.1"
flake8 = "^6.1.0"
bandit = "^1.7.5"

[tool.black]
line-length = 100
target-version = ["py311"]
include = "\.pyi?$"
extend-exclude = "/migrations/"

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_any_generics = true
plugins = ["pydantic.mypy"]

[tool.pytest]
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"
addopts = "--cov=src --cov-report=xml --cov-report=term-missing -v"

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow",
    "gpu: marks tests requiring GPU",
    "integration: marks integration tests"
]